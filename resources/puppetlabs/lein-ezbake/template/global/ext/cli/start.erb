#!/usr/bin/env bash
set +e

pid=$(pgrep -f <%= EZBake::Config[:uberjar_name] %>)

restartfile=<%= EZBake::Config[:restart_file] %>
start_timeout=<%= EZBake::Config[:start_timeout] %>
dir=$(dirname "$restartfile")
realname="<%= EZBake::Config[:real_name] %>"
PIDFILE="/var/run/puppetlabs/${realname}/${realname}.pid"

if [ ! -e "${INSTALL_DIR}/ezbake-functions.sh" ]; then
    echo "Unable to find ${INSTALL_DIR}/ezbake-functions.sh script, failing start." 1>&2
    exit 1
fi

. "${INSTALL_DIR}/ezbake-functions.sh"

write_pid_file() {
    if [ ! -d "/var/run/puppetlabs/${realname}" ]; then
        mkdir -p /var/run/puppetlabs/${realname}
        chown -R $USER:$GROUP /var/run/puppetlabs/${realname}
    fi
    echo $1 > $PIDFILE
}

terminate_java_process() {
    echo "Startup script was terminated before completion" 1>&2
    kill_pid $pid $PIDFILE $SERVICE_STOP_RETRIES
    exit 1
}

if [ -n "$pid" ]; then
    write_pid_file $pid
    exit 0
fi

rm -f "$PIDFILE"

if [ ! -e "$restartfile" ]; then
    mkdir -p "$dir"
    echo -n "0" > "$restartfile"
elif [ ! -r "$restartfile" ] || [ ! -w "$restartfile" ]; then
    echo "The restart-file at <%= EZBake::Config[:restart_file] %> is not readable and/or writeable." 1>&2
    exit 1
fi

${JAVA_BIN} ${JAVA_ARGS} -Djava.security.egd=/dev/urandom -cp ${INSTALL_DIR}/<%= EZBake::Config[:uberjar_name] %> clojure.main -m <%= EZBake::Config[:main_namespace] %> --config "${CONFIG}" -b "${BOOTSTRAP_CONFIG}" &

# $! is the process id of the last backgrounded process, the Java process above.
pid=$!
trap terminate_java_process SIGHUP SIGINT SIGTERM
write_pid_file $pid

cur=$(head -n 1 "$restartfile")
initial=$cur

timeout=$start_timeout
while [ "$cur" == "$initial" ] ;do
    kill -0 $pid >/dev/null 2>&1
    if [ $? -ne 0 ]; then
      rm -f "$PIDFILE"
      echo "Background process $pid exited before start had completed" 1>&2
      exit 1
    fi

    sleep 1
    cur=$(head -n 1 "$restartfile")

    ((timeout--))
    if [ $timeout -eq 0 ]; then
        echo "Startup timed out after $start_timeout seconds" 1>&2
        exit 1
    fi
done

write_pid_file $pid
exit 0
