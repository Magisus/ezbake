#!/usr/bin/env bash
set +e

pid="$(pgrep -f <%= EZBake::Config[:uberjar_name] %>)"

restartfile="/opt/puppetlabs/server/data/<%= EZBake::Config[:real_name] %>/restartcounter"
start_timeout="${START_TIMEOUT:-<%= EZBake::Config[:start_timeout] %>}"

realname="<%= EZBake::Config[:real_name] %>"
PIDFILE="/var/run/puppetlabs/${realname}/${realname}.pid"

if [ ! -e "${INSTALL_DIR}/ezbake-functions.sh" ]; then
    echo "Unable to find ${INSTALL_DIR}/ezbake-functions.sh script, failing start." 1>&2
    exit 1
fi

. "${INSTALL_DIR}/ezbake-functions.sh"

write_pid_file() {
    if [ ! -d "/var/run/puppetlabs/${realname}" ]; then
        mkdir -p /var/run/puppetlabs/${realname}
        chown -R $USER:$GROUP /var/run/puppetlabs/${realname}
    fi
    echo $1 > $PIDFILE
}

terminate_java_process() {
    echo "Startup script was terminated before completion" 1>&2
    kill_pid "$pid" "$PIDFILE" "$SERVICE_STOP_RETRIES"
    exit 1
}

if [ -n "$pid" ]; then
    write_pid_file $pid
    exit 0
fi

rm -f "$PIDFILE"

init_restart_file "$restartfile" || exit $?

${JAVA_BIN} ${JAVA_ARGS} -Djava.security.egd=/dev/urandom \
  -cp ${INSTALL_DIR}/<%= EZBake::Config[:uberjar_name] %> \
  clojure.main \
  -m <%= EZBake::Config[:main_namespace] %> \
  --config "${CONFIG}" \
  --bootstrap-config "${BOOTSTRAP_CONFIG}" \
  --restart-file "${restartfile}" &

# $! is the process id of the last backgrounded process, the Java process above.
pid=$!
trap terminate_java_process SIGHUP SIGINT SIGTERM
write_pid_file $pid

cur="$(head -n 1 "$restartfile")"
initial="$cur"

timeout="$start_timeout"
while [ "$cur" == "$initial" ] ;do
    kill -0 $pid >/dev/null 2>&1
    if [ $? -ne 0 ]; then
        rm -f "$PIDFILE"
        echo "Background process $pid exited before start had completed" 1>&2
        exit 1
    fi

    sleep 1
    cur="$(head -n 1 "$restartfile")"

    ((timeout--))
    if [ $timeout -eq 0 ]; then
        echo "Startup timed out after $start_timeout seconds" 1>&2
        terminate_java_process
        rm -f "$PIDFILE"
        exit 1
    fi
done

write_pid_file $pid
exit 0
