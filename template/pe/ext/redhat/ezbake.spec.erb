%global realname <%= EZBake::Config[:real_name] %>
%global realversion <%= @version %>
%global rpmversion <%= @rpmversion %>

%global puppet_libdir     %(/opt/puppet/bin/ruby -rrbconfig -e "puts Config::CONFIG['sitelibdir']")
%global p_vendor          pe

%global _with_systemd  0
%global _with_sysvinit 0
%global _systemd_el    0
%global _systemd_sles  0
%global _old_sles      0
%global _old_el        0


%if 0%{?fedora} >= 18 || 0%{?rhel} >= 7
%global _with_systemd 1
%global _systemd_el   1
%endif

%if 0%{?suse_version} >= 1210
%global _with_systemd 1
%global _systemd_sles 1
%endif

%if 0%{?rhel} && 0%{?rhel} < 7
%global _with_sysvinit 1
%global _old_el        1
%endif

%if 0%{?suse_version} && 0%{?suse_version} < 1210
%global _with_sysvinit 1
%global _old_sles      1
%endif

%if 0%{?p_vendor:1}
     %global name_prefix %{p_vendor}-

     # Grab the "real" directories so we can reference the system's files.
     %{!?_real_prefix:          %global _real_prefix          %{_prefix}}
     %{!?_real_initrddir:       %global _real_initrddir       %{_initrddir}}
     %{!?_real_libdir:          %global _real_libdir          %{_libdir}}
     %{!?_real_sbindir:         %global _real_sbindir         %{_sbindir}}
     %{!?_real_sysconfdir:      %global _real_sysconfdir      %{_sysconfdir}}
     %{!?_real_datadir:         %global _real_datadir         %{_datadir}}
     %{!?_real_sharedstatedir:  %global _real_sharedstatedir  %{_sharedstatedir}}
     %{!?_real_bindir:          %global _real_bindir          %{_bindir}}
     # Use the alternate locations for things.
     %global _initrddir       %{_real_initrddir}
     %define _lib             lib
     %global _sysconfdir      %{_real_sysconfdir}/puppetlabs
     %global _prefix          /opt/puppet
     %global _datadir         %{_prefix}/share
     %global _mandir          %{_datadir}/man
     %global _libdir          %{_prefix}/lib
     %global _sharedstatedir  %{_prefix}/var/lib
     %global _bindir          %{_prefix}/bin
%endif

# These macros are not always defined on much older rpm-based systems
%global  _rundir         /var/run

%define __jar_repack     0

Name:             <%= EZBake::Config[:project] %>
Version:          <%= @rpmversion %>
Release:          <%= @rpmrelease %>%{?dist}
BuildRoot:        %{_tmppath}/%{realname}-%{version}-%{release}-root-%(%{__id_u} -n)

Summary:          Puppet Labs - <%= EZBake::Config[:project] %>
License:          PL Commercial

URL:              http://github.com/puppetlabs/ezbake
Source0:          %{name}-%{realversion}.tar.gz

Group:            System Environment/Daemons
BuildArch:        noarch

<% EZBake::Config[:replaces_pkgs].each do |package, version| %>
Obsoletes:        <%=package-%> <= <%=version-%>-1
Conflicts:        <%=package-%> <= <%=version-%>-1
<% end %>

BuildRequires:    pe-ruby
BuildRequires:    /usr/sbin/useradd
%if %{_with_systemd}
BuildRequires:    systemd
%endif
%if %{_old_el}
Requires:         chkconfig
%endif
%if %{_old_sles}
Requires:         aaa_base
%endif

%if %{_systemd_el}
Requires(post):   systemd
Requires(preun):  systemd
Requires(postun): systemd
%endif

%if %{_systemd_sles}
%{?systemd_requires}
%endif

Requires:         pe-java
<% EZBake::Config[:redhat][:additional_dependencies].each do |dep| %>
Requires:         <%= dep %>
<% end %>

%description
<%= Pkg::Config.config[:description] %>

<% unless EZBake::Config[:terminus_info].empty? -%>
%package termini
Group: Development/Libraries
Summary: Termini for <%= EZBake::Config[:project] %>
Requires: pe-puppet
<% EZBake::Config[:terminus_info].each do |proj_name, info| -%>
Obsoletes: <%= proj_name -%>-terminus < <%= info[:version].gsub('-', '.') %>
Provides:  <%= proj_name -%>-terminus >= <%= info[:version].gsub('-', '.') %>
<% end -%>

%description termini
Termini for <%= EZBake::Config[:project] %>
Contains terminus for:
<% EZBake::Config[:terminus_info].each do |proj_name, info| -%>
  <%= proj_name %> (version <%= info[:version] %>)
<% end -%>
<% end -%>

%prep
%setup -q -n %{name}-%{realversion}

%build

%install

rm -rf $RPM_BUILD_ROOT

env DESTDIR=%{buildroot} prefix=%{_prefix} confdir=%{_sysconfdir} bindir=%{_bindir} rundir=%{_rundir}/<%= EZBake::Config[:project] %> make -e install-<%= EZBake::Config[:project] %>
%if %{_with_systemd}
install -d -m0755 %{buildroot}%{_unitdir}
install -m 0644 ext/redhat/<%= EZBake::Config[:project] %>.service %{buildroot}%{_unitdir}/<%= EZBake::Config[:project] %>.service
%else
install -d -m 0755 %{buildroot}%{_initrddir}
%endif
%if %{_old_el}
install -m 0755 ext/redhat/init %{buildroot}%{_initrddir}/<%= EZBake::Config[:project] %>
%endif
%if %{_old_sles}
install -m 0755 ext/redhat/init.suse %{buildroot}%{_initrddir}/<%= EZBake::Config[:project] %>
%endif
install -d -m 0755 %{buildroot}%{_real_sysconfdir}/sysconfig
install -m 0755 ext/default %{buildroot}%{_real_sysconfdir}/sysconfig/<%= EZBake::Config[:project] %>

<% EZBake::Config[:redhat][:additional_install].each do |install| -%>
<%= install %>
<% end -%>

install -d -m 700 %{buildroot}%{_localstatedir}/log/<%= EZBake::Config[:project] %>

<% unless EZBake::Config[:terminus_info].empty? -%>
env DESTDIR=%{buildroot} rubylibdir=%{puppet_libdir} prefix=%{_prefix} make -e install-<%= EZBake::Config[:project] %>-termini
<% end -%>

%clean
rm -rf $RPM_BUILD_ROOT

%pre
# Add <%= EZBake::Config[:group] %> group
getent group <%= EZBake::Config[:group] %> > /dev/null || \
  groupadd -r <%= EZBake::Config[:group] %> || :
# Add <%= EZBake::Config[:user] %> user
getent passwd <%= EZBake::Config[:user] %> > /dev/null || \
  useradd -r -g <%= EZBake::Config[:group] %> -d %{_datadir}/%{realname} -s /sbin/nologin \
     -c "<%= EZBake::Config[:project] %> daemon"  <%= EZBake::Config[:user] %> || :
<% EZBake::Config[:redhat][:additional_preinst].each do |cmd| -%>
<%= cmd %>
<% end -%>

%post
%if %{_systemd_el}
%systemd_post <%= EZBake::Config[:project] %>.service
%endif
%if %{_systemd_sles}
%service_add_post <%= EZBake::Config[:project] %>.service
%endif
%if %{_with_sysvinit}
# If this is an install (as opposed to an upgrade)...
if [ "$1" = "1" ]; then
  # Register the <%= EZBake::Config[:project] %> service
  /sbin/chkconfig --add %{name}
fi
%endif

%preun
%if %{_systemd_el}
%systemd_preun <%= EZBake::Config[:project] %>.service
%endif
%if %{_systemd_sles}
%service_del_preun <%= EZBake::Config[:project] %>.service
%endif
%if %{_with_sysvinit}
# If this is an uninstall (as opposed to an upgrade) then
#  we want to shut down and disable the service.
if [ "$1" = "0" ] ; then
    /sbin/service %{name} stop >/dev/null 2>&1
    /sbin/chkconfig --del %{name}
fi
%endif

%postun
%if %{_systemd_el}
%systemd_postun_with_restart <%= EZBake::Config[:project] %>.service
%endif
%if %{_systemd_sles}
%service_del_postun <%= EZBake::Config[:project] %>.service
%endif
%if %{_with_sysvinit}
# Remove the rundir if this is an uninstall (as opposed to an upgrade)...
if [ "$1" = "0" ]; then
    rm -rf %{_rundir}/%{name} || :
fi

# Only restart it if it is running
if [ "$1" = "1" ] ; then
    /sbin/service %{name} condrestart >/dev/null 2>&1
fi
%endif

%files
%defattr(-, root, root)
%dir %attr(0700, <%= EZBake::Config[:user] %>, <%= EZBake::Config[:group] %>) %{_localstatedir}/log/%{name}
<% if File.exists?("ext/docs") %>
%doc ext/docs
<% end %>
%{_datadir}/%{realname}
%if %{_with_systemd}
%{_unitdir}/%{name}.service
%else
%{_initrddir}/%{name}
%endif
%config(noreplace) %{_sysconfdir}/%{realname}
%{_real_sysconfdir}/sysconfig/%{name}
<% if ! EZBake::Config[:cli_app_files].empty? -%>
%{_bindir}/%{name}
<% end -%>
<% EZBake::Config[:bin_files].each do |bin_file| -%>
%{_bindir}/<%= bin_file.sub(%r{^ext/bin/}, "") %>
<% end -%>
%ghost %attr(0755, root, root) %{_rundir}/%{name}

<% unless EZBake::Config[:terminus_info].empty? -%>
%files termini
<% EZBake::Config[:terminus_info].each do |proj_name, info| -%>
%defattr(-, root, root)
<% info[:files].each do |file| -%>
%{puppet_libdir}/<%= file -%>
<% end -%>
<% end -%>
<% end %>

%changelog
* <%= Time.now.strftime("%a %b %d %Y") %> Puppet Labs Release <info@puppetlabs.com> -  <%= @rpmversion %>-<%= @rpmrelease %>
- Build for <%= @version %>

