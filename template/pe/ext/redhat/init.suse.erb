#!/bin/bash
#
# Puppet Labs <%= EZBake::Config[:project] %>
#
# chkconfig: - 20 80
# description: Puppet Labs <%= EZBake::Config[:project] %>

### BEGIN INIT INFO
# Provides:          <%= EZBake::Config[:project] %>
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= EZBake::Config[:project] %>
# Description:       Start <%= EZBake::Config[:project] %> daemon placed in /etc/init.d.
### END INIT INFO

# Copyright 2014 Puppet Labs

# Source function library.
[ -e /lib/lsb/init-functions ] && . /lib/lsb/init-functions

prog="<%= EZBake::Config[:project] %>"

##########################################
#  You should not have to edit this init script.
#  Please attempt to make changes in /etc/sysconfig/<%= EZBake::Config[:project] %>
##########################################

[ -e "/etc/sysconfig/${prog}" ] && . "/etc/sysconfig/${prog}"
[ -e $INSTALL_DIR/ezbake-functions.sh ] && . $INSTALL_DIR/ezbake-functions.sh

config=$CONFIG

PATH=/sbin:/usr/sbin:/bin:/usr/bin
JARFILE="<%= EZBake::Config[:uberjar_name] %>"
JAVA_ARGS="${JAVA_ARGS} -jar ${INSTALL_DIR}/${JARFILE} --config ${CONFIG} --bootstrap-config ${BOOTSTRAP_CONFIG}"
lockfile="/var/lock/subsys/${prog}"
PIDFILE="/var/run/${prog}/${prog}.pid"
LOGFILE="/var/log/${prog}/${prog}.log"
START_TIMEOUT=${START_TIMEOUT:-30}

# First reset status of this service
rc_reset

find_my_pid() {
    if [ ! -d  "/var/run/${prog}" ] ; then
        install --owner "${USER}" --group "${USER}" --directory "/var/run/${prog}"
    fi
    pid="$(pgrep -f "${JAVA_BIN}.*${JARFILE}")"
}

start() {
    [ -x "${JAVA_BIN}" ] || exit 5
    [ -e "${config}" ] || exit 6
    echo -n $"Starting ${prog}: "
    export HOME="$(getent passwd ${USER} | cut -d':' -f6)"
    pushd ${INSTALL_DIR} &> /dev/null
    startproc -u "${USER}" -l "${LOGFILE}" -p "${PIDFILE}" -- "${JAVA_BIN}" "-XX:OnOutOfMemoryError=\"kill -9 %p\" -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/${prog}" ${JAVA_ARGS}
    rc_status -v

    <% if not EZBake::Config[:redhat][:post_start_action].empty? -%>
    if [ "$?" -eq 0]; then
    <% EZBake::Config[:redhat][:post_start_action].each do |action| -%>
        <%= action %>
    <% end -%>
    fi
    <% end -%>

    sleep 1
    popd &> /dev/null
    find_my_pid
    echo "${pid}" > "${PIDFILE}"
    [ -s "${PIDFILE}" ] && log_success_msg $"${prog} startup" || log_failure_msg $"${prog} startup"
    echo
    [ -s "${PIDFILE}" ] && touch "${lockfile}"

    if [ "$retval" -eq 0 ] && ! wait_for_app $(cat $PIDFILE) $START_TIMEOUT ;then
        log_failure_msg $"$base startup"
    fi
}

stop() {
    echo -n $"Stopping ${prog}: "
    find_my_pid

    if [ ! -s "${PIDFILE}" ] ; then
        echo "${pid}" > "${PIDFILE}"
    fi

    killproc -p "${PIDFILE}" -t"${SERVICE_STOP_RETRIES}"s -- "${JAVA_BIN}" "-XX:OnOutOfMemoryError=\"kill -9 %p\" -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/${prog}" "${JAVA_ARGS}"
    rc_status -v
    retval=$?
    [ $retval -eq 0 ] && log_success_msg $"${prog} stopped" || log_failure_msg $"${prog} stopped"
    echo
    [ $retval -eq 0 ] && rm -f "${lockfile}" "${PIDFILE}"
}

restart() {
    stop
    start
}

sl_status_q() {
  sl_status > /dev/null 2>&1
}

sl_status() {
    checkproc -p "${PIDFILE}" -- "${JAVA_BIN}" "-XX:OnOutOfMemoryError=\"kill -9 %p\" -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/${prog}" "${JAVA_ARGS}"
    rc_status -v
}


case "$1" in
    start)
        sl_status_q && exit 0
        $1
        ;;
    stop)
        sl_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    condrestart|try-restart)
        sl_status_q || exit 0
        restart
        ;;
    status)
        sl_status
        ;;
    *)
        echo $"Usage: ${0} {start|stop|restart|condrestart|try-restart|status}"
        exit 2
esac
exit $?
