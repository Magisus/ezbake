%global realname <%= EZBake::Config[:project] %>
%global realversion <%= @version %>
%global rpmversion <%= @rpmversion %>

%global open_jdk          java-1.7.0-openjdk

%if 0%{?fedora} >= 17 || 0%{?rhel} >= 7
%global puppet_libdir     %(ruby -rrbconfig -e "puts Config::CONFIG['vendorlibdir']")
%else
%global puppet_libdir     %(ruby -rrbconfig -e "puts Config::CONFIG['sitelibdir']")
%endif

%if 0%{?fedora} >= 18 || 0%{?rhel} >= 7
%global _with_systemd 1
%else
%global _with_systemd 0
%endif

# These macros are not always defined on much older rpm-based systems
%global  _sharedstatedir /var/lib
%global  _realsysconfdir /etc
%global  _rundir         /var/run

%define __jar_repack     0

Name:             <%= EZBake::Config[:project] %>
Version:          <%= @rpmversion %>
Release:          <%= @rpmrelease %>%{?dist}
BuildRoot:        %{_tmppath}/%{realname}-%{version}-%{release}-root-%(%{__id_u} -n)

Summary:          Puppet Labs - <%= EZBake::Config[:project] %>
License:          ASL 2.0

URL:              http://github.com/puppetlabs/ezbake
Source0:          <%= EZBake::Config[:project] %>-<%= @rpmversion %>.tar.gz

Group:            System Environment/Daemons
BuildArch:        noarch

BuildRequires:    ruby
BuildRequires:    /usr/sbin/useradd
%if %{_with_systemd}
Requires(post):   systemd
Requires(preun):  systemd
Requires(postun): systemd
BuildRequires:    systemd
%else
Requires:         chkconfig
%endif

Requires:         %{open_jdk}
<% EZBake::Config[:redhat][:additional_dependencies].each do |dep| %>
Requires:         <%= dep %>
<% end %>

%description
<%= Pkg::Config.config[:description] -%>

#%package terminus
#Summary: Puppet terminus files to connect to PuppetDB
#Group: Development/Libraries
#Requires: puppet >= 3.3

#%description terminus
#A Puppet Node Terminus for the classifier

%prep
%setup -q -n %{realname}-%{realversion}

%build

%install

rm -rf $RPM_BUILD_ROOT

env DESTDIR=%{buildroot} prefix=%{_prefix} confdir=%{_sysconfdir} rundir=%{_rundir}/<%= EZBake::Config[:project] %> make -e install-<%= EZBake::Config[:project] %>
install -d -m 0755 %{buildroot}%{_initrddir}
install -d -m 0755 %{buildroot}%{_sysconfdir}/sysconfig
%if %{_with_systemd}
install -d -m0755 %{buildroot}%{_unitdir}
install -m 0644 ext/redhat/<%= EZBake::Config[:project] %>.service %{buildroot}%{_unitdir}/<%= EZBake::Config[:project] %>.service
%else
install -m 0755 ext/redhat/init %{buildroot}%{_initrddir}/<%= EZBake::Config[:project] %>
%endif
install -m 0755 ext/default %{buildroot}%{_sysconfdir}/sysconfig/<%= EZBake::Config[:project] %>
#env DESTDIR=%{buildroot} prefix=%{_prefix} make -e install-terminus

%clean
rm -rf $RPM_BUILD_ROOT

%pre
# Here we'll do a little bit of cleanup just in case something went horribly
# awry during a previous install/uninstall:
if [ -f "%{_datadir}/%{realname}/start_service_after_upgrade" ] ; then
   rm %{_datadir}/%{realname}/start_service_after_upgrade
fi
# If this is an upgrade (as opposed to an install) then we need to check
#  and see if the service is running.  If it is, we need to stop it.
#  we want to shut down and disable the service.
if [ "$1" = "2" ] ; then
    if /sbin/service %{name} status > /dev/null ; then
        # If we need to restart the service after the upgrade
        #  is finished, we will touch a temp file so that
        #  we can detect that state
        touch %{_datadir}/%{realname}/start_service_after_upgrade
        /sbin/service %{name} stop >/dev/null 2>&1
    fi
fi
# Add <%= EZBake::Config[:group] %> group
getent group <%= EZBake::Config[:group] %> > /dev/null || \
  groupadd -r <%= EZBake::Config[:group] %> || :
# Add <%= EZBake::Config[:user] %> user
getent passwd <%= EZBake::Config[:user] %> > /dev/null || \
  useradd -r -g <%= EZBake::Config[:group] %> -d %{_datadir}/%{realname} -s /sbin/nologin \
     -c "<%= EZBake::Config[:project] %> daemon"  <%= EZBake::Config[:user] %> || :
<% EZBake::Config[:redhat][:additional_preinst].each do |cmd| -%>
<%= cmd %>
<% end -%>

%post
%if %{_with_systemd}
%systemd_post <%= EZBake::Config[:project] %>.service
%else
# If this is an install (as opposed to an upgrade)...
if [ "$1" = "1" ]; then
  # Register the <%= EZBake::Config[:project] %> service
  /sbin/chkconfig --add %{name}
fi
%endif

%preun
%if %{_with_systemd}
%systemd_preun <%= EZBake::Config[:project] %>.service
%else
# If this is an uninstall (as opposed to an upgrade) then
#  we want to shut down and disable the service.
if [ "$1" = "0" ] ; then
    /sbin/service %{name} stop >/dev/null 2>&1
    /sbin/chkconfig --del %{name}
fi
%endif

%postun
%if %{_with_systemd}
%systemd_postun_with_restart <%= EZBake::Config[:project] %>.service
%else
# Remove the rundir if this is an uninstall (as opposed to an upgrade)...
if [ "$1" = "0" ]; then
    rm -rf %{_rundir}/%{name} || :
fi

# If this is an upgrade (as opposed to an install) then we need to check
#  and see if we stopped the service during the install (we indicate
#  this via the existence of a temp file that was created during that
#  phase).  If we did, then we need to restart it.
if [ "$1" = "1" ] ; then
    if [ -f "%{_datadir}/%{realname}/start_service_after_upgrade" ] ; then
        rm %{_datadir}/%{realname}/start_service_after_upgrade
        /sbin/service %{name} start >/dev/null 2>&1
    fi
fi
%endif

%files
%defattr(-, root, root)
<% if File.exists?("ext/docs") %>
%doc ext/docs
<% end %>
%{_datadir}/%{realname}
%if %{_with_systemd}
%{_unitdir}/%{name}.service
%else
%{_initrddir}/%{name}
%endif
%config(noreplace) %{_sysconfdir}/%{name}
%{_sysconfdir}/sysconfig/%{name}
%ghost %attr(0755, root, root) %{_rundir}/%{name}

#%files terminus
#%defattr(-, root, root)
#%{puppet_libdir}/puppet/indirector/node/classifier.rb

%changelog
* <%= Time.now.strftime("%a %b %d %Y") %> Puppet Labs Release <info@puppetlabs.com> -  <%= @rpmversion %>-<%= @rpmrelease %>
- Build for <%= @version %>

